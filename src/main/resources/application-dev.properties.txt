Je donne un exemple pour bonne pratique d'un fichier de Configuration.
Pour ma part, j'ai un fichier application-dev.properties et un fichier application-prod.properties.
Dans mon fichier application.properties une seule ligne : spring.profiles.active=dev que je passe de dev a prod pour adapter mon environnement.


spring.datasource.url=jdbc:mysql://localhost:3306/nom_de_la_bdd
spring.datasource.username=nom_de_utilisateur
spring.datasource.password=mot_de_passe
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuration JPA et Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Gestion des fichiers upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB

# Désactiver la mise en cache des ressources statiques
spring.resources.cache.period=0
spring.web.resources.cache.cachecontrol.max-age=0
spring.web.resources.cache.cachecontrol.no-store=true

# Niveau de log global (INFO par défaut pour éviter les détails inutiles)
logging.level.root=INFO

# Log de votre package à un niveau plus basique
logging.level.com.datajava=ERROR

# Enregistrement des logs dans un fichier
logging.file.name=/app/logs/spring-boot-application.log

# Chemin pour le stockage des images uploadées
file.upload-dir=uploads/images

# Configuration CORS pour autoriser les requêtes du front-end Angular
cors.allowed.origins=http://localhost:4200

# Configuration JWT
jwt.secret=phrase_secrete
jwt.expiration=86400000
